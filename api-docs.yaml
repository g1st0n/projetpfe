openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /editCat:
    put:
      tags:
      - categorie-controller
      operationId: editcat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Famille_Product'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Famille_Product'
  /api/workshops/{idWorkshop}:
    get:
      tags:
      - workshop-controller
      operationId: getWorkshopById
      parameters:
      - name: idWorkshop
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkshopResponseDTO'
    put:
      tags:
      - workshop-controller
      operationId: updateWorkshop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkshopRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkshopResponseDTO'
    delete:
      tags:
      - workshop-controller
      operationId: deleteWorkshop
      parameters:
      - name: idWorkshop
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/users/{id}:
    get:
      tags:
      - user-controller
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/subcategories/{id}:
    get:
      tags:
      - sub-category-controller
      operationId: getSubCategoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubCategoryResponseDTO'
    put:
      tags:
      - sub-category-controller
      operationId: updateSubCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategoryRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubCategoryResponseDTO'
    delete:
      tags:
      - sub-category-controller
      operationId: deleteSubCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/raw-materials/{idMaterial}:
    get:
      tags:
      - raw-material-controller
      operationId: getRawMaterialById
      parameters:
      - name: idMaterial
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
    put:
      tags:
      - raw-material-controller
      operationId: updateRawMaterial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawMaterialRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
    delete:
      tags:
      - raw-material-controller
      operationId: deleteRawMaterial
      parameters:
      - name: idMaterial
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/products/{id}:
    get:
      tags:
      - product-controller
      operationId: getById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponse'
    put:
      tags:
      - product-controller
      operationId: editProduct
      parameters:
      - name: productRequest
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ProductRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponse'
    delete:
      tags:
      - product-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/production-plans/{idPlanning}:
    get:
      tags:
      - production-plan-controller
      operationId: getProductionPlanById
      parameters:
      - name: idPlanning
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductionPlanResponseDTO'
    put:
      tags:
      - production-plan-controller
      operationId: updateProductionPlan
      parameters:
      - name: idPlanning
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionPlanRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductionPlanResponseDTO'
    delete:
      tags:
      - production-plan-controller
      operationId: deleteProductionPlan
      parameters:
      - name: idPlanning
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/orders/{idOrder}:
    get:
      tags:
      - order-controller
      operationId: getOrderById
      parameters:
      - name: idOrder
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponseDTO'
    put:
      tags:
      - order-controller
      operationId: updateOrder
      parameters:
      - name: idOrder
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponseDTO'
    delete:
      tags:
      - order-controller
      operationId: deleteOrder
      parameters:
      - name: idOrder
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/clients/{id}:
    put:
      tags:
      - client-controller
      operationId: updateClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientResponseDTO'
    delete:
      tags:
      - client-controller
      operationId: deleteClient
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /saveCat:
    post:
      tags:
      - categorie-controller
      operationId: SaveCat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Famille_Product'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Famille_Product'
  /api/workshops/add:
    post:
      tags:
      - workshop-controller
      operationId: createWorkshop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkshopRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkshopResponseDTO'
  /api/users/add:
    post:
      tags:
      - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
  /api/subcategories/add:
    post:
      tags:
      - sub-category-controller
      operationId: createSubCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategoryRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubCategoryResponseDTO'
  /api/raw-materials/add:
    post:
      tags:
      - raw-material-controller
      operationId: createRawMaterial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawMaterialRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
  /api/products/add:
    post:
      tags:
      - product-controller
      operationId: saveProduct
      parameters:
      - name: productRequest
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ProductRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponse'
  /api/production-plans/add:
    post:
      tags:
      - production-plan-controller
      operationId: createProductionPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionPlanRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductionPlanResponseDTO'
  /api/orders/add:
    post:
      tags:
      - order-controller
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponseDTO'
  /api/files/upload:
    post:
      tags:
      - file-storage-controller
      operationId: uploadFile
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileStorageResponse'
  /api/clients/add:
    post:
      tags:
      - client-controller
      operationId: createClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientResponseDTO'
  /api/auth/register:
    post:
      tags:
      - auth-controller
      operationId: registerUser
      parameters:
      - name: registrationDto
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UserRegistrationDto'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwtRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtResponse'
  /cats:
    get:
      tags:
      - categorie-controller
      operationId: getAllcat
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Famille_Product'
  /cat/{id}:
    get:
      tags:
      - categorie-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Famille_Product'
  /api/workshops:
    get:
      tags:
      - workshop-controller
      operationId: getAllWorkshops
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWorkshopResponseDTO'
  /api/workshops/showAll:
    get:
      tags:
      - workshop-controller
      operationId: getAllWorkshops_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkshopResponseDTO'
  /api/workshops/generate/{workshopId}:
    get:
      tags:
      - workshop-controller
      operationId: generatePdf
      parameters:
      - name: workshopId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/users:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDTO'
  /api/users/generate/{userId}:
    get:
      tags:
      - user-controller
      operationId: generatePdf_1
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/subcategories:
    get:
      tags:
      - sub-category-controller
      operationId: getSubCategories
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSubCategoryResponseDTO'
  /api/subcategories/showAll:
    get:
      tags:
      - sub-category-controller
      operationId: getAllSubCategories
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubCategoryResponseDTO'
  /api/raw-materials:
    get:
      tags:
      - raw-material-controller
      operationId: getAllRawMaterials
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageRawMaterialResponseDTO'
  /api/raw-materials/showAll:
    get:
      tags:
      - raw-material-controller
      operationId: getAllRawMaterials_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RawMaterialResponseDTO'
  /api/raw-materials/generate/{rawMaterialId}:
    get:
      tags:
      - raw-material-controller
      operationId: generatePdf_2
      parameters:
      - name: rawMaterialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/products:
    get:
      tags:
      - product-controller
      operationId: getProducts
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageProductResponse'
  /api/products/showAll:
    get:
      tags:
      - product-controller
      operationId: getAllProduct
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
  /api/products/generate/{productId}:
    get:
      tags:
      - product-controller
      operationId: generatePdf_3
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/production-plans:
    get:
      tags:
      - production-plan-controller
      operationId: getAllProductionPlans
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductionPlanResponseDTO'
  /api/production-plans/generate/{productionPlanId}:
    get:
      tags:
      - production-plan-controller
      operationId: generatePdf_4
      parameters:
      - name: productionPlanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/orders:
    get:
      tags:
      - order-controller
      operationId: getAllOrders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponseDTO'
  /api/orders/generate/{ORDERId}:
    get:
      tags:
      - order-controller
      operationId: generatePdf_5
      parameters: []
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/files/{id}:
    get:
      tags:
      - file-storage-controller
      operationId: getFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
    delete:
      tags:
      - file-storage-controller
      operationId: deleteFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/files/list:
    get:
      tags:
      - file-storage-controller
      operationId: listAllFiles
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileStorageResponse'
  /api/clients:
    get:
      tags:
      - client-controller
      operationId: getClients
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageClientResponseDTO'
  /api/clients/showAll:
    get:
      tags:
      - client-controller
      operationId: getAllClients
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientResponseDTO'
  /api/clients/generate/{clientId}:
    get:
      tags:
      - client-controller
      operationId: generatePdf_6
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/auth/logout:
    get:
      tags:
      - auth-controller
      operationId: logout
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /deleteCat/{id}:
    delete:
      tags:
      - categorie-controller
      operationId: getCat
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    Famille_Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        designation:
          type: string
    WorkshopRequestDTO:
      type: object
      properties:
        idWorkshop:
          type: integer
          format: int64
        workshopNumber:
          type: integer
          format: int32
        productionCapacity:
          type: integer
          format: int64
        machineCount:
          type: integer
          format: int32
        machineCost:
          type: number
          format: float
    WorkshopResponseDTO:
      type: object
      properties:
        idWorkshop:
          type: integer
          format: int64
        workshopNumber:
          type: integer
          format: int32
        productionCapacity:
          type: integer
          format: int64
        machineCount:
          type: integer
          format: int32
        machineCost:
          type: number
          format: float
    UserRequestDTO:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        address:
          type: string
        phoneNumber:
          type: integer
          format: int64
        password:
          type: string
        role:
          type: string
        status:
          type: string
        lastAccess:
          type: string
          format: date-time
        enabled:
          type: boolean
        profileImageId:
          type: integer
          format: int64
    UserResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        address:
          type: string
        phoneNumber:
          type: integer
          format: int64
        role:
          type: string
        status:
          type: string
        lastAccess:
          type: string
          format: date-time
        enabled:
          type: boolean
        profileImageUrl:
          type: string
    SubCategoryRequestDTO:
      type: object
      properties:
        idSubCategory:
          type: integer
          format: int64
        name:
          type: string
        reference:
          type: string
    SubCategoryResponseDTO:
      type: object
      properties:
        idSubCategory:
          type: integer
          format: int64
        name:
          type: string
        reference:
          type: string
    RawMaterialRequestDTO:
      type: object
      properties:
        idMaterial:
          type: integer
          format: int64
        name:
          type: string
        materialType:
          type: string
        supplier:
          type: string
        availableQuantity:
          type: integer
          format: int32
        unit:
          type: string
        color:
          type: string
        origin:
          type: string
        unitPrice:
          type: number
          format: float
    RawMaterialResponseDTO:
      type: object
      properties:
        idMaterial:
          type: integer
          format: int64
        name:
          type: string
        materialType:
          type: string
        supplier:
          type: string
        availableQuantity:
          type: integer
          format: int32
        unit:
          type: string
        color:
          type: string
        origin:
          type: string
        unitPrice:
          type: number
          format: float
    ProductRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        designation:
          type: string
        color:
          type: string
        weight:
          type: number
          format: float
        dimension:
          type: number
          format: float
        productionDuration:
          type: integer
          format: int32
        price:
          type: number
          format: float
        quantity:
          type: integer
          format: int32
        productionCost:
          type: number
          format: float
        logo:
          type: string
          format: binary
        subCategory:
          type: integer
          format: int64
        rawMaterial:
          type: integer
          format: int64
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        designation:
          type: string
        color:
          type: string
        weight:
          type: number
          format: float
        dimension:
          type: number
          format: float
        productionDuration:
          type: integer
          format: int32
        price:
          type: number
          format: float
        quantity:
          type: integer
          format: int32
        productionCost:
          type: number
          format: float
        logo:
          type: string
        logoName:
          type: string
        logoType:
          type: string
        subCategory:
          type: string
        rawMaterial:
          type: string
    ProductionPlanRequestDTO:
      type: object
      properties:
        date:
          type: string
        quantity:
          type: integer
          format: int32
        duration:
          type: string
        productId:
          type: integer
          format: int64
        workshopId:
          type: integer
          format: int64
        workforce:
          type: integer
          format: int32
        comment:
          type: string
    ProductionPlanResponseDTO:
      type: object
      properties:
        idPlanning:
          type: integer
          format: int64
        date:
          type: string
        quantity:
          type: integer
          format: int32
        duration:
          type: string
        productId:
          type: integer
          format: int64
        workshopId:
          type: integer
          format: int64
        workforce:
          type: integer
          format: int32
        comment:
          type: string
        status:
          type: string
    OrderRequestDTO:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
    OrderResponseDTO:
      type: object
      properties:
        idOrder:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
    ClientRequestDTO:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
        fullName:
          type: string
        clientType:
          type: string
        email:
          type: string
        address:
          type: string
        telephone:
          type: string
        userId:
          type: integer
          format: int64
    ClientResponseDTO:
      type: object
      properties:
        idClient:
          type: integer
          format: int64
        fullName:
          type: string
        clientType:
          type: string
        email:
          type: string
        address:
          type: string
        telephone:
          type: string
        userId:
          type: integer
          format: int64
        userFullName:
          type: string
    FileStorageResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fileName:
          type: string
        fileType:
          type: string
        creationDate:
          type: string
          format: date-time
    UserRegistrationDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: integer
          format: int64
        status:
          type: string
        email:
          type: string
        password:
          type: string
        profileImage:
          type: string
          format: binary
    Client:
      type: object
      properties:
        idClient:
          type: integer
          format: int64
        fullName:
          type: string
        clientType:
          type: string
        email:
          type: string
        address:
          type: string
        telephone:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CustomerOrder'
        user:
          $ref: '#/components/schemas/User'
    CustomerOrder:
      type: object
      properties:
        idOrder:
          type: integer
          format: int64
        client:
          $ref: '#/components/schemas/Client'
        product:
          $ref: '#/components/schemas/Product'
        date:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
    FileStorage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fileName:
          type: string
        fileType:
          type: string
        fileSize:
          type: integer
          format: int64
        data:
          type: string
          format: byte
        creationDate:
          type: string
          format: date-time
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    Product:
      type: object
      properties:
        idProduct:
          type: integer
          format: int64
        reference:
          type: string
        designation:
          type: string
        color:
          type: string
        weight:
          type: number
          format: float
        dimension:
          type: number
          format: float
        productionDuration:
          type: integer
          format: int32
        price:
          type: number
          format: float
        quantity:
          type: integer
          format: int32
        productionCost:
          type: number
          format: float
        subCategory:
          $ref: '#/components/schemas/SubCategory'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CustomerOrder'
        productionPlans:
          type: array
          items:
            $ref: '#/components/schemas/ProductionPlan'
        rawMaterial:
          $ref: '#/components/schemas/RawMaterial'
        logo:
          $ref: '#/components/schemas/FileStorage'
    ProductionPlan:
      type: object
      properties:
        idPlanning:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
        duration:
          $ref: '#/components/schemas/LocalTime'
        product:
          $ref: '#/components/schemas/Product'
        workshop:
          $ref: '#/components/schemas/Workshop'
        workforce:
          type: integer
          format: int32
        comment:
          type: string
    RawMaterial:
      type: object
      properties:
        idMaterial:
          type: integer
          format: int64
        name:
          type: string
        materialType:
          type: string
        supplier:
          type: string
        availableQuantity:
          type: integer
          format: int32
        unit:
          type: string
        color:
          type: string
        origin:
          type: string
        unitPrice:
          type: number
          format: float
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    SubCategory:
      type: object
      properties:
        idSubCategory:
          type: integer
          format: int64
        name:
          type: string
        reference:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        address:
          type: string
        phoneNumber:
          type: integer
          format: int64
        password:
          type: string
        role:
          type: string
        status:
          type: string
        lastAccess:
          type: string
          format: date-time
        clients:
          type: array
          items:
            $ref: '#/components/schemas/Client'
        enabled:
          type: boolean
        profileImage:
          $ref: '#/components/schemas/FileStorage'
    Workshop:
      type: object
      properties:
        idWorkshop:
          type: integer
          format: int64
        workshopNumber:
          type: integer
          format: int32
        productionCapacity:
          type: integer
          format: int64
        machineCount:
          type: integer
          format: int32
        machineCost:
          type: number
          format: float
        productionPlans:
          type: array
          items:
            $ref: '#/components/schemas/ProductionPlan'
    JwtRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    JwtResponse:
      type: object
      properties:
        jwtToken:
          type: string
        username:
          type: string
        role:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageWorkshopResponseDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/WorkshopResponseDTO'
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    SortObject:
      type: object
      properties:
        direction:
          type: string
        nullHandling:
          type: string
        ascending:
          type: boolean
        property:
          type: string
        ignoreCase:
          type: boolean
    PageSubCategoryResponseDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SubCategoryResponseDTO'
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageRawMaterialResponseDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/RawMaterialResponseDTO'
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageProductResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageClientResponseDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ClientResponseDTO'
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
