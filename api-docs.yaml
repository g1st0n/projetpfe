openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /editCat:
    put:
      tags:
      - categorie-controller
      operationId: editcat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Famille_Product'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Famille_Product'
  /api/products/{id}:
    get:
      tags:
      - product-controller
      operationId: getById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponse'
    put:
      tags:
      - product-controller
      operationId: editProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponse'
    delete:
      tags:
      - product-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /saveCat:
    post:
      tags:
      - categorie-controller
      operationId: SaveCat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Famille_Product'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Famille_Product'
  /api/products/add:
    post:
      tags:
      - product-controller
      operationId: saveProduct
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponse'
  /api/files/upload:
    post:
      tags:
      - file-storage-controller
      operationId: uploadFile
      parameters:
      - name: fileStorageRequest
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/FileStorageRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileStorageResponse'
  /api/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwtRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtResponse'
  /cats:
    get:
      tags:
      - categorie-controller
      operationId: getAllcat
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Famille_Product'
  /cat/{id}:
    get:
      tags:
      - categorie-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Famille_Product'
  /api/products:
    get:
      tags:
      - product-controller
      operationId: getProducts
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageProductResponse'
  /api/products/showAll:
    get:
      tags:
      - product-controller
      operationId: getAllProduct
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
  /api/files/{id}:
    get:
      tags:
      - file-storage-controller
      operationId: getFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
    delete:
      tags:
      - file-storage-controller
      operationId: deleteFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/files/list:
    get:
      tags:
      - file-storage-controller
      operationId: listAllFiles
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileStorageResponse'
  /api/auth/logout:
    get:
      tags:
      - auth-controller
      operationId: logout
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /deleteCat/{id}:
    delete:
      tags:
      - categorie-controller
      operationId: getCat
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    Famille_Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        designation:
          type: string
    ProductRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        designation:
          type: string
        color:
          type: string
        weight:
          type: number
          format: float
        dimension:
          type: number
          format: float
        productionDuration:
          type: integer
          format: int32
        price:
          type: number
          format: float
        quantity:
          type: integer
          format: int32
        productionCost:
          type: number
          format: float
        logo:
          type: string
          format: binary
        subCategory:
          type: integer
          format: int64
        rawMaterial:
          type: integer
          format: int64
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        designation:
          type: string
        color:
          type: string
        weight:
          type: number
          format: float
        dimension:
          type: number
          format: float
        productionDuration:
          type: integer
          format: int32
        price:
          type: number
          format: float
        quantity:
          type: integer
          format: int32
        productionCost:
          type: number
          format: float
        logo:
          type: string
        logoName:
          type: string
        logoType:
          type: string
        subCategory:
          type: string
        rawMaterial:
          type: string
    FileStorageRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        description:
          type: string
        fileCategory:
          type: string
    FileStorageResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fileName:
          type: string
        fileType:
          type: string
        creationDate:
          type: string
          format: date-time
    JwtRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    JwtResponse:
      type: object
      properties:
        jwtToken:
          type: string
        username:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageProductResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    SortObject:
      type: object
      properties:
        direction:
          type: string
        nullHandling:
          type: string
        ascending:
          type: boolean
        property:
          type: string
        ignoreCase:
          type: boolean
