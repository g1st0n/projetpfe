/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SortObject
 */
export interface SortObject {
    /**
     * 
     * @type {string}
     * @memberof SortObject
     */
    direction?: string;
    /**
     * 
     * @type {string}
     * @memberof SortObject
     */
    nullHandling?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SortObject
     */
    ascending?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SortObject
     */
    property?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SortObject
     */
    ignoreCase?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SortObject
     */
    name?: string;

    /**
     * 
     * @type {string}
     * @memberof SortObject
     */
    asc?: string;
}

/**
 * Check if a given object implements the SortObject interface.
 */
export function instanceOfSortObject(value: object): value is SortObject {
    return true;
}

export function SortObjectFromJSON(json: any): SortObject {
    return SortObjectFromJSONTyped(json, false);
}

export function SortObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): SortObject {
    if (json == null) {
        return json;
    }
    console.log(json);
    return {
        
        'direction': json['direction'] == null ? undefined : json['direction'],
        'nullHandling': json['nullHandling'] == null ? undefined : json['nullHandling'],
        'name': json['name'] == null ? undefined : json['name'],
        'asc': json['asc'] == null ? undefined : json['asc'],
        'ascending': json['ascending'] == null ? undefined : json['ascending'],
        'property': json['property'] == null ? undefined : json['property'],
        'ignoreCase': json['ignoreCase'] == null ? undefined : json['ignoreCase'],
    };
}

export function SortObjectToJSON(value?: SortObject | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'asc': value['asc'],
        'direction': value['direction'],
        'nullHandling': value['nullHandling'],
        'ascending': value['ascending'],
        'property': value['property'],
        'ignoreCase': value['ignoreCase'],
    };
}

